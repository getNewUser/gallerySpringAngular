{"version":3,"sources":["webpack:///./src/app/components/inputs/categories-input/categories-input.component.html","webpack:///./src/app/components/inputs/description-input/description-input.component.html","webpack:///./src/app/components/inputs/email-input/email-input.component.html","webpack:///./src/app/components/inputs/name-input-wider/name-input-wider.component.html","webpack:///./src/app/components/inputs/name-input/name-input.component.html","webpack:///./src/app/components/inputs/password-input/password-input.component.html","webpack:///./src/app/components/inputs/search-box-input/search-box-input.component.html","webpack:///./src/app/components/inputs/tags-checkbox-input/tags-checkbox-input.component.html","webpack:///./src/app/components/inputs/tags-input/tags-input.component.html","webpack:///./src/app/components/inputs/categories-input/categories-input.component.scss","webpack:///./src/app/components/inputs/categories-input/categories-input.component.ts","webpack:///./src/app/components/inputs/description-input/description-input.component.scss","webpack:///./src/app/components/inputs/description-input/description-input.component.ts","webpack:///./src/app/components/inputs/email-input/email-input.component.scss","webpack:///./src/app/components/inputs/email-input/email-input.component.ts","webpack:///./src/app/components/inputs/name-input-wider/name-input-wider.component.scss","webpack:///./src/app/components/inputs/name-input-wider/name-input-wider.component.ts","webpack:///./src/app/components/inputs/name-input/name-input.component.scss","webpack:///./src/app/components/inputs/name-input/name-input.component.ts","webpack:///./src/app/components/inputs/password-input/password-input.component.scss","webpack:///./src/app/components/inputs/password-input/password-input.component.ts","webpack:///./src/app/components/inputs/search-box-input/search-box-input.component.scss","webpack:///./src/app/components/inputs/search-box-input/search-box-input.component.ts","webpack:///./src/app/components/inputs/tags-checkbox-input/tags-checkbox-input.component.scss","webpack:///./src/app/components/inputs/tags-checkbox-input/tags-checkbox-input.component.ts","webpack:///./src/app/components/inputs/tags-input/tags-input.component.scss","webpack:///./src/app/components/inputs/tags-input/tags-input.component.ts","webpack:///./src/app/control-accessors.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,4QAA4Q,eAAe,oE;;;;;;;;;;;ACA3R,mEAAmE,aAAa,2c;;;;;;;;;;;ACAhF,qX;;;;;;;;;;;ACAA,+DAA+D,aAAa,4Y;;;;;;;;;;;ACA5E,+DAA+D,aAAa,sb;;;;;;;;;;;ACA5E,4OAA4O,aAAa,4U;;;;;;;;;;;ACAzP,oL;;;;;;;;;;;ACAA,oOAAoO,UAAU,kE;;;;;;;;;;;ACA9O,0LAA0L,eAAe,yGAAyG,KAAK,uoBAAuoB,KAAK,4E;;;;;;;;;;;ACAn8B,kCAAkC,gBAAgB,uBAAuB,GAAG,cAAc,sBAAsB,GAAG,6CAA6C,u5B;;;;;;;;;;;;;;;;;;;ACAvF;AACqB;AAC/B;AAc/D;IAEE;QACA,aAAQ,GAAQ,cAAO,CAAC,CAAC;QACzB,YAAO,GAAQ,cAAO,CAAC,CAAC;QAGd,oBAAe,GAAkC,IAAI,0DAAY,EAAmB,CAAC;IALhF,CAAC;iCAFL,wBAAwB;IAenC,sBAAI,2CAAK;aAYT;YACE,OAAO,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;aAdD,UAAU,GAAG;YACX,4FAA4F;YAC5F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC;;;OAAA;IAED,mDAAgB,GAAhB,UAAiB,KAAsB;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,iEAAe,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5E,4BAA4B;IAC9B,CAAC;IAKD,6CAAU,GAAV,UAAW,GAAQ;QACjB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IACnB,CAAC;IACD,mDAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,oDAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IAEpB,CAAC;IACD,mDAAgB,GAAhB,UAAkB,UAAmB;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;;IApCsC;QAAtC,+DAAS,CAAC,2DAAS,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;wEAAY,2DAAS;+DAAC;IAClD;QAAT,4DAAM,EAAE;wEAAkB,0DAAY;qEAAwD;IAG/F;QADC,2DAAK,EAAE;;yDACJ;IAGJ;QADC,2DAAK,EAAE;;oEACY;IAbT,wBAAwB;QAZpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,oMAAgD;YAEhD,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,iCAAwB,EAAxB,CAAwB,CAAC;oBACvD,KAAK,EAAE,IAAI;iBACZ;aACF;;SACF,CAAC;;OACW,wBAAwB,CA4CpC;IAAD,+BAAC;CAAA;AA5CoC;;;;;;;;;;;;AChBrC,kCAAkC,gBAAgB,uBAAuB,GAAG,2BAA2B,iBAAiB,GAAG,YAAY,sBAAsB,GAAG,6CAA6C,+jC;;;;;;;;;;;;;;;;;;ACArJ;AACiB;AAczE;IACE;QACA,aAAQ,GAAQ,cAAO,CAAC,CAAC;QACzB,YAAO,GAAQ,cAAO,CAAC,CAAC;QACxB,QAAG,GAAG,EAAE,CAAC,CAAC,oDAAoD;QAC9D,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,CAAC,CAAC,CAAC,qJAAqJ;IALrJ,CAAC;kCADL,yBAAyB;IASpC,sBAAI,4CAAK;aAAT,UAAU,GAAG;YACX,4FAA4F;YAC5F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACd,IAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAC;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;aAC7B;YACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAED,8CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,oDAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,qDAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,oDAAgB,GAAhB,UAAkB,UAAmB;QACnC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;;IA/BU,yBAAyB;QAZrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,kCAAyB,EAAzB,CAAyB,CAAC;oBACxD,KAAK,EAAE,IAAI;iBACZ;aACF;YACD,uMAAiD;;SAElD,CAAC;;OACW,yBAAyB,CAgCrC;IAAD,gCAAC;CAAA;AAhCqC;;;;;;;;;;;;ACftC,kCAAkC,gBAAgB,uBAAuB,GAAG,cAAc,sBAAsB,GAAG,6CAA6C,m2B;;;;;;;;;;;;;;;;;;ACAtF;AACD;AAczE;IACE;QACA,aAAQ,GAAQ,cAAO,CAAC,CAAC;QACzB,YAAO,GAAQ,cAAO,CAAC,CAAC;QACxB,QAAG,GAAG,EAAE,CAAC,CAAC,oDAAoD;IAH/C,CAAC;4BADL,mBAAmB;IAM9B,sBAAI,sCAAK;aAAT,UAAU,GAAG;YACX,4FAA4F;YAC5F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC;;;OAAA;IAED,wCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,8CAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,+CAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,8CAAgB,GAAhB,UAAkB,UAAmB;QACnC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;;IAxBU,mBAAmB;QAZ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,4BAAmB,EAAnB,CAAmB,CAAC;oBAClD,KAAK,EAAE,IAAI;iBACZ;aACF;YACD,qLAA2C;;SAE5C,CAAC;;OACW,mBAAmB,CAyB/B;IAAD,0BAAC;CAAA;AAzB+B;;;;;;;;;;;;ACfhC,kCAAkC,gBAAgB,GAAG,cAAc,sBAAsB,GAAG,6CAA6C,20B;;;;;;;;;;;;;;;;;;ACApF;AACoB;AAczE;IAIE;QAHA,QAAG,GAAG,EAAE,CAAC,CAAC,oDAAoD;QAC9D,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,CAAC,CAAC,CAAC,qJAAqJ;QAGpK,aAAQ,GAAQ,cAAO,CAAC,CAAC;QACzB,YAAO,GAAQ,cAAO,CAAC,CAAC;IAFxB,CAAC;gCALU,uBAAuB;IASlC,sBAAI,0CAAK;aAAT,UAAU,GAAG;YACX,4FAA4F;YAC5F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACd,IAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAC;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC5B,yBAAyB;aAC1B;YACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAED,4CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,kDAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,mDAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,kDAAgB,GAAhB,UAAkB,UAAmB;QACnC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;;IAhCU,uBAAuB;QAZnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,gCAAuB,EAAvB,CAAuB,CAAC;oBACtD,KAAK,EAAE,IAAI;iBACZ;aACF;YACD,oMAAgD;;SAEjD,CAAC;;OACW,uBAAuB,CAiCnC;IAAD,8BAAC;CAAA;AAjCmC;;;;;;;;;;;;ACfpC,kCAAkC,gBAAgB,uBAAuB,GAAG,cAAc,sBAAsB,GAAG,6CAA6C,u2B;;;;;;;;;;;;;;;;;;ACAtF;AACD;AAczE;IAIE;QAHA,QAAG,GAAG,EAAE,CAAC,CAAC,oDAAoD;QAC9D,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,CAAC,CAAC,CAAC,qJAAqJ;QAGpK,aAAQ,GAAQ,cAAO,CAAC,CAAC;QACzB,YAAO,GAAQ,cAAO,CAAC,CAAC;IAFxB,CAAC;2BALU,kBAAkB;IAS7B,sBAAI,qCAAK;aAAT,UAAU,GAAG;YACX,4FAA4F;YAC5F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACd,IAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAC;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;aAC7B;YACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAED,uCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,6CAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,8CAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,6CAAgB,GAAhB,UAAkB,UAAmB;QACnC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;;IA/BU,kBAAkB;QAZ9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,2BAAkB,EAAlB,CAAkB,CAAC;oBACjD,KAAK,EAAE,IAAI;iBACZ;aACF;YACD,kLAA0C;;SAE3C,CAAC;;OACW,kBAAkB,CAgC9B;IAAD,yBAAC;CAAA;AAhC8B;;;;;;;;;;;;ACf/B,kCAAkC,gBAAgB,uBAAuB,GAAG,cAAc,sBAAsB,GAAG,6CAA6C,+3B;;;;;;;;;;;;;;;;;;ACAtF;AACD;AAczE;IACE;QACA,aAAQ,GAAQ,cAAO,CAAC,CAAC;QACzB,YAAO,GAAQ,cAAO,CAAC,CAAC;QACxB,QAAG,GAAG,EAAE,CAAC,CAAC,oDAAoD;QAC9D,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,CAAC,CAAC,CAAC,qJAAqJ;IALrJ,CAAC;+BADL,sBAAsB;IAQjC,sBAAI,yCAAK;aAAT,UAAU,GAAG;YACX,4FAA4F;YAC5F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;gBACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;aAC7B;YACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAED,2CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,iDAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,kDAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,iDAAgB,GAAhB,UAAkB,UAAmB;QACnC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;;IA/BU,sBAAsB;QAZlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,+BAAsB,EAAtB,CAAsB,CAAC;oBACrD,KAAK,EAAE,IAAI;iBACZ;aACF;YACD,8LAA8C;;SAE/C,CAAC;;OACW,sBAAsB,CAgClC;IAAD,6BAAC;CAAA;AAhCkC;;;;;;;;;;;;ACfnC,kCAAkC,gBAAgB,uBAAuB,GAAG,cAAc,sBAAsB,GAAG,6CAA6C,m7B;;;;;;;;;;;;;;;;;;ACAvF;AACnB;AAetD;IAGE;QADA,QAAG,GAAG,EAAE,CAAC,CAAC,oDAAoD;QAG9D,aAAQ,GAAQ,cAAO,CAAC,CAAC;QACzB,YAAO,GAAQ,cAAO,CAAC,CAAC;IAFxB,CAAC;gCAJU,uBAAuB;IAQlC,sBAAI,0CAAK;aAAT,UAAU,GAAG;YACX,4FAA4F;YAC5F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC;;;OAAA;IAED,4CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,kDAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,mDAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,kDAAgB,GAAhB,UAAkB,UAAmB;QACnC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;;IA1BU,uBAAuB;QAZnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,oMAAgD;YAEhD,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,gCAAuB,EAAvB,CAAuB,CAAC;oBACtD,KAAK,EAAE,IAAI;iBACZ;aACF;;SACF,CAAC;;OACW,uBAAuB,CA2BnC;IAAD,8BAAC;CAAA;AA3BmC;;;;;;;;;;;;AChBpC,kCAAkC,eAAe,uBAAuB,GAAG,cAAc,sBAAsB,GAAG,6CAA6C,m7B;;;;;;;;;;;;;;;;;;;ACAtF;AAC6B;AACvC;AAc/D;IAEE;QACA,aAAQ,GAAQ,cAAO,CAAC,CAAC;QACzB,YAAO,GAAQ,cAAO,CAAC,CAAC;QAGd,oBAAe,GAAkC,IAAI,0DAAY,EAAmB,CAAC;IALhF,CAAC;mCAFL,0BAA0B;IAerC,sBAAI,6CAAK;aAYT;YACE,OAAO,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;aAdD,UAAU,GAAG;YACX,4FAA4F;YAC5F,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC;;;OAAA;IAED,qDAAgB,GAAhB,UAAiB,KAAsB;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,iEAAe,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5E,4BAA4B;IAC9B,CAAC;IAKD,+CAAU,GAAV,UAAW,GAAQ;QACjB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IACnB,CAAC;IACD,qDAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,sDAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IAEpB,CAAC;IACD,qDAAgB,GAAhB,UAAkB,UAAmB;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;;IApCsC;QAAtC,+DAAS,CAAC,2DAAS,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;wEAAY,2DAAS;iEAAC;IAClD;QAAT,4DAAM,EAAE;wEAAkB,0DAAY;uEAAwD;IAG/F;QADC,2DAAK,EAAE;;2DACJ;IAGJ;QADC,2DAAK,EAAE;;4DACE;IAbC,0BAA0B;QAZtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,6MAAmD;YAEnD,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,mCAA0B,EAA1B,CAA0B,CAAC;oBACzD,KAAK,EAAE,IAAI;iBACZ;aACF;;SACF,CAAC;;OACW,0BAA0B,CA4CtC;IAAD,iCAAC;CAAA;AA5CsC;;;;;;;;;;;;AChBvC,kCAAkC,gBAAgB,uBAAuB,GAAG,cAAc,sBAAsB,GAAG,6CAA6C,22B;;;;;;;;;;;;;;;;;;;;;ACApE;AACvC;AAEiC;AACe;AACrD;AAchD;IAGE;QAAA,iBAKC;QAQD,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QACR,uBAAkB,GAAa,CAAC,2DAAK,EAAE,2DAAK,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,CAAC;QAOjB,eAAU,GAAG,IAAI,0DAAW,EAAE,CAAC;QAO/B,cAAS,GAAQ,cAAQ,CAAC,CAAC;QAC3B,cAAS,GAAQ,cAAQ,CAAC,CAAC;QA9BzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CACnD,gEAAS,CAAC,IAAI,CAAC,EACf,0DAAG,CAAC,UAAC,GAAkB,IAAK,UAAG,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAjD,CAAiD,CAAC,CAAC,CAAC;IAEpF,CAAC;2BARU,kBAAkB;IAqC7B,sBAAI,qCAAK;aAMT;YACE,OAAO,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;aARD,UAAU,GAAG;YACX,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC;;;OAAA;IAOO,uCAAU,GAAlB,UAAmB,KAAa;QAC9B,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAExC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAG,IAAI,UAAG,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,EAA5C,CAA4C,CAAC,CAAC;IAClF,CAAC;IAEO,yDAA4B,GAApC;QAEE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;IACjC,CAAC;IAGD,qCAAQ,GAAR,UAAS,KAAmC;QAE1C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACrD,CAAC;IAED,sCAAS,GAAT,UAAU,KAAa;QAErB,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC;SACpD;IACH,CAAC;IAED,mCAAM,GAAN,UAAO,KAAwB;QAE7B,gEAAgE;QAChE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YAEhC,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YAE1B,UAAU;YACV,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;gBACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;aAC/B;YAED,wBAAwB;YACxB,IAAI,KAAK,CAAC,KAAK,EAAE;gBACf,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;aACxB;YACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC;SACpD;IACH,CAAC;IAED,uCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,6CAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,8CAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,6CAAgB,GAAhB,UAAkB,UAAmB;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACrD,CAAC;;IAzGD;QADC,2DAAK,EAAE;;mDACM;IAUd;QADC,2DAAK,EAAE;;uDACU;IAKwB;QAAzC,+DAAS,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAW,wDAAU;wDAAmB;IAC3C;QAArC,+DAAS,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAkB,iEAAe;+DAAC;IA7B5D,kBAAkB;QAZ9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kLAA0C;YAE1C,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,gEAAU,CAAC,cAAM,2BAAkB,EAAlB,CAAkB,CAAC;oBACjD,KAAK,EAAE,IAAI;iBACZ;aACF;;SACF,CAAC;;OACW,kBAAkB,CAuH9B;IAAD,yBAAC;CAAA;AAvH8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB0D;AACkB;AACzC;AACf;AACyC;AACS;AACK;AACjB;AACqB;AACrE;AAC0E;AACT;AA2B1G;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QAzBlC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,wGAAmB;gBACnB,iHAAsB;gBACtB,sHAAuB;gBACvB,qGAAkB;gBAClB,0HAAyB;gBACzB,uHAAwB;gBACxB,qGAAkB;gBAClB,gIAA0B;gBAC1B,uHAAuB;aACxB;YACD,OAAO,EAAE,CAAC,0DAAW,EAAE,kEAAmB,EAAE,+DAAc,CAAC;YAC3D,OAAO,EAAE;gBACP,wGAAmB;gBACnB,iHAAsB;gBACtB,sHAAuB;gBACvB,qGAAkB;gBAClB,0HAAyB;gBACzB,uHAAwB;gBACxB,qGAAkB;gBAClB,gIAA0B;gBAC1B,uHAAuB;aACxB;SACF,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH","file":"default~views-add-add-module~views-gallery-gallerymodule-module~views-login-login-module~views-signu~1811b3e8-es5.js","sourcesContent":["module.exports = \"<mat-form-field>\\r\\n    <mat-select multiple [(ngModel)]=\\\"value\\\" placeholder=\\\"Categories..\\\"  (selectionChange)=\\\"selectionChanged($event)\\\" >\\r\\n        <mat-option *ngFor=\\\"let category of categoriesList\\\" [value]=\\\"category\\\">\\r\\n            {{category.name}}\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\"","module.exports = \"<mat-form-field>\\r\\n  <textarea  placeholder=\\\"{{placeholder}}\\\" class=\\\"textarea1\\\" matInput rows=\\\"2\\\" cols=\\\"10\\\" [(ngModel)]=\\\"value\\\" minlength=\\\"10\\\" maxlength=\\\"100\\\" required ngModel #inputfield=\\\"ngModel\\\" class=\\\"form-control\\\">\\r\\n    </textarea>\\r\\n  <mat-error *ngIf=\\\"inputfield.control.hasError('minlength')\\\">\\r\\n    Minimum length is 10 symbols\\r\\n  </mat-error>\\r\\n  <mat-error *ngIf=\\\"inputfield.control.hasError('required')\\\">\\r\\n    Description is required\\r\\n  </mat-error>\\r\\n</mat-form-field>\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput type=\\\"email\\\" [(ngModel)]=\\\"value\\\" maxlength=\\\"30\\\" required #inputfield=\\\"ngModel\\\"  ngModel class=\\\"form-control\\\"  placeholder=\\\"Email..\\\"/><mat-icon matPrefix>email</mat-icon>\\r\\n  <mat-error *ngIf=\\\"inputfield.control.hasError('required')\\\">\\r\\n    Email is required\\r\\n  </mat-error>\\r\\n</mat-form-field>\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input placeholder=\\\"{{placeholder}}\\\" matInput [(ngModel)]=\\\"value\\\" minlength=\\\"3\\\" maxlength=\\\"10\\\" required\\r\\n    #inputfield=\\\"ngModel\\\" ngModel class=\\\"form-control\\\" />\\r\\n  <mat-error *ngIf=\\\"inputfield.control.hasError('minlength')\\\">\\r\\n    Minimum length is 3 symbols\\r\\n  </mat-error>\\r\\n  <mat-error *ngIf=\\\"inputfield.control.hasError('required')\\\">\\r\\n    Name is required\\r\\n  </mat-error>\\r\\n</mat-form-field>\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input placeholder=\\\"{{placeholder}}\\\" matInput [(ngModel)]=\\\"value\\\" minlength=\\\"3\\\" maxlength=\\\"10\\\" required #inputfield=\\\"ngModel\\\" ngModel class=\\\"form-control\\\"/>\\r\\n  <mat-icon matPrefix>perm_identity</mat-icon>\\r\\n  <mat-error *ngIf=\\\"inputfield.control.hasError('minlength')\\\">\\r\\n    Minimum length is 3 symbols\\r\\n  </mat-error>\\r\\n  <mat-error *ngIf=\\\"inputfield.control.hasError('required')\\\">\\r\\n    Name is required\\r\\n  </mat-error>\\r\\n</mat-form-field>\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput name=\\\"inputfield\\\" type=\\\"password\\\" [(ngModel)]=\\\"value\\\" minlength=\\\"8\\\" maxlength=\\\"20\\\" required\\r\\n    #inputfield=\\\"ngModel\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"{{placeholder}}\\\" />\\r\\n  <mat-icon class=\\\"signupPrefix\\\" matPrefix>vpn_key</mat-icon>\\r\\n  <mat-error *ngIf=\\\"inputfield.control.hasError('required')\\\">\\r\\n    Password is required\\r\\n  </mat-error>\\r\\n  <mat-error *ngIf=\\\"inputfield.control.hasError('minlength')\\\">\\r\\n    Minimum length is 8 symbols\\r\\n  </mat-error>\\r\\n</mat-form-field>\\r\\n\"","module.exports = \"<mat-form-field appearance=\\\"outline\\\">\\r\\n  <input matInput placeholder=\\\"Search image\\\" [(ngModel)]=\\\"value\\\" class=\\\"input-padding\\\">\\r\\n</mat-form-field>\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select multiple [(ngModel)]=\\\"value\\\" placeholder=\\\"Tags..\\\" (selectionChange)=\\\"selectionChanged($event)\\\">\\r\\n    <mat-option *ngFor=\\\"let tag of tags\\\" [value]=\\\"tag\\\">\\r\\n      {{tag.name}}\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\"","module.exports = \"<mat-form-field class=\\\"w-100\\\">\\r\\n  <mat-chip-list #chipList required aria-label=\\\"Tags selection\\\" [(ngModel)]=\\\"value\\\">\\r\\n    <mat-chip *ngFor=\\\"let tag of value; let i = index;\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\"\\r\\n      (removed)=\\\"removeTag(i)\\\">\\r\\n      {{tag}}\\r\\n      <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n    </mat-chip>\\r\\n    <input placeholder=\\\"New tag...\\\" #tagInput [formControl]=\\\"tagControl\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n      [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n      [matChipInputAddOnBlur]=\\\"addOnBlur\\\" (matChipInputTokenEnd)=\\\"addTag($event)\\\" />\\r\\n  </mat-chip-list>\\r\\n  <mat-error *ngIf='isError'>Tags are required</mat-error>\\r\\n  <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n    <mat-option *ngFor=\\\"let tag of filteredTags | async\\\" [value]=\\\"tag\\\">\\r\\n      {{tag}}\\r\\n    </mat-option>\\r\\n  </mat-autocomplete>\\r\\n</mat-form-field>\\r\\n\\r\\n\"","module.exports = \"mat-form-field {\\n  width: 100%;\\n  margin-bottom: 7px;\\n}\\n\\nmat-icon {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvY2F0ZWdvcmllcy1pbnB1dC9DOlxcVXNlcnNcXHZpbG1pXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxnYWxsZXJ5QW5ndWxhclNwcmluZy9zcmNcXGFwcFxcY29tcG9uZW50c1xcaW5wdXRzXFxjYXRlZ29yaWVzLWlucHV0XFxjYXRlZ29yaWVzLWlucHV0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9jYXRlZ29yaWVzLWlucHV0L2NhdGVnb3JpZXMtaW5wdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURDQTtFQUNFLGlCQUFBO0FDRUYiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9jYXRlZ29yaWVzLWlucHV0L2NhdGVnb3JpZXMtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogN3B4O1xyXG59XHJcbm1hdC1pY29uIHtcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufVxyXG4iLCJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiA3cHg7XG59XG5cbm1hdC1pY29uIHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59Il19 */\"","import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Component, forwardRef, Input, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { MatSelectChange, MatSelect } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-categories-input',\r\n  templateUrl: './categories-input.component.html',\r\n  styleUrls: ['./categories-input.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => CategoriesInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class CategoriesInputComponent implements ControlValueAccessor {\r\n\r\n  constructor() {}\r\n  onChange: any = () => {};\r\n  onTouch: any = () => {};\r\n  isDisabled: boolean;\r\n  @ViewChild(MatSelect, {static: false}) matSelect: MatSelect;\r\n  @Output() selectionChange: EventEmitter<MatSelectChange> = new EventEmitter<MatSelectChange>();\r\n  \r\n  @Input()\r\n  val; // this is the updated value that the class accesses\r\n\r\n  @Input()\r\n  categoriesList: any;\r\n\r\n  set value(val) {\r\n    // this value is updated by programmatic changes if( val !== undefined && this.val !== val){\r\n    this.val = val ? val : [''];\r\n    this.onChange(val);\r\n    this.onTouch(val);\r\n  }\r\n\r\n  selectionChanged(event: MatSelectChange){\r\n    this.selectionChange.emit(new MatSelectChange(this.matSelect, event.value));\r\n    // console.log(event.value);\r\n  }\r\n\r\n  get value() {\r\n    return this.val;\r\n  }\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n  margin-bottom: 7px;\\n}\\nmat-form-field textarea {\\n  resize: none;\\n}\\nmat-icon {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvZGVzY3JpcHRpb24taW5wdXQvQzpcXFVzZXJzXFx2aWxtaVxcT25lRHJpdmVcXERvY3VtZW50c1xcZ2FsbGVyeUFuZ3VsYXJTcHJpbmcvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGlucHV0c1xcZGVzY3JpcHRpb24taW5wdXRcXGRlc2NyaXB0aW9uLWlucHV0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9kZXNjcmlwdGlvbi1pbnB1dC9kZXNjcmlwdGlvbi1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtBQ0NGO0FEQ0U7RUFDRSxZQUFBO0FDQ0o7QURHQTtFQUNFLGlCQUFBO0FDQUYiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9kZXNjcmlwdGlvbi1pbnB1dC9kZXNjcmlwdGlvbi1pbnB1dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tYm90dG9tOiA3cHg7XHJcblxyXG4gIHRleHRhcmVhIHtcclxuICAgIHJlc2l6ZTogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbm1hdC1pY29uIHtcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufVxyXG4iLCJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiA3cHg7XG59XG5tYXQtZm9ybS1maWVsZCB0ZXh0YXJlYSB7XG4gIHJlc2l6ZTogbm9uZTtcbn1cblxubWF0LWljb24ge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","import { Component, forwardRef,  } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-description-input',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => DescriptionInputComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  templateUrl: './description-input.component.html',\r\n  styleUrls: ['./description-input.component.scss']\r\n})\r\nexport class DescriptionInputComponent implements ControlValueAccessor {\r\n  constructor() {}\r\n  onChange: any = () => {};\r\n  onTouch: any = () => {};\r\n  val = ''; // this is the updated value that the class accesses\r\n  placeholder = '';\r\n  isChanged = 0; // set value(val) gets called twice while initializing so I set it's placeholder as val twice just to avoid it being renamed if user inputs something\r\n\r\n\r\n  set value(val) {\r\n    // this value is updated by programmatic changes if( val !== undefined && this.val !== val){\r\n    this.val = val;\r\n     if(this.isChanged < 3){\r\n      this.placeholder = this.val;\r\n    }\r\n    this.onChange(val);\r\n    this.onTouch(val);\r\n    this.isChanged++;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n  margin-bottom: 7px;\\n}\\n\\nmat-icon {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvZW1haWwtaW5wdXQvQzpcXFVzZXJzXFx2aWxtaVxcT25lRHJpdmVcXERvY3VtZW50c1xcZ2FsbGVyeUFuZ3VsYXJTcHJpbmcvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGlucHV0c1xcZW1haWwtaW5wdXRcXGVtYWlsLWlucHV0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9lbWFpbC1pbnB1dC9lbWFpbC1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtBQ0NGOztBRENBO0VBQ0UsaUJBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5wdXRzL2VtYWlsLWlucHV0L2VtYWlsLWlucHV0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDdweDtcclxufVxyXG5tYXQtaWNvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn0iLCJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiA3cHg7XG59XG5cbm1hdC1pY29uIHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59Il19 */\"","import { Component, forwardRef, HostBinding, Input } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-email-input',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => EmailInputComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  templateUrl: './email-input.component.html',\r\n  styleUrls: ['./email-input.component.scss']\r\n})\r\nexport class EmailInputComponent implements ControlValueAccessor {\r\n  constructor() {}\r\n  onChange: any = () => {};\r\n  onTouch: any = () => {};\r\n  val = ''; // this is the updated value that the class accesses\r\n\r\n  set value(val) {\r\n    // this value is updated by programmatic changes if( val !== undefined && this.val !== val){\r\n    this.val = val;\r\n    this.onChange(val);\r\n    this.onTouch(val);\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n}\\n\\nmat-icon {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvbmFtZS1pbnB1dC13aWRlci9DOlxcVXNlcnNcXHZpbG1pXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxnYWxsZXJ5QW5ndWxhclNwcmluZy9zcmNcXGFwcFxcY29tcG9uZW50c1xcaW5wdXRzXFxuYW1lLWlucHV0LXdpZGVyXFxuYW1lLWlucHV0LXdpZGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9uYW1lLWlucHV0LXdpZGVyL25hbWUtaW5wdXQtd2lkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxpQkFBQTtBQ0VGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvbmFtZS1pbnB1dC13aWRlci9uYW1lLWlucHV0LXdpZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbm1hdC1pY29uIHtcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufVxyXG4iLCJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5tYXQtaWNvbiB7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufSJdfQ== */\"","import { Component, forwardRef} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-name-input-wider',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NameInputWiderComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  templateUrl: './name-input-wider.component.html',\r\n  styleUrls: ['./name-input-wider.component.scss']\r\n})\r\nexport class NameInputWiderComponent implements ControlValueAccessor{\r\n  val = ''; // this is the updated value that the class accesses\r\n  placeholder = '';\r\n  isChanged = 0; // set value(val) gets called twice while initializing so I set it's placeholder as val twice just to avoid it being renamed if user inputs something\r\n  constructor() {\r\n  }\r\n  onChange: any = () => {};\r\n  onTouch: any = () => {};\r\n\r\n  set value(val) {\r\n    // this value is updated by programmatic changes if( val !== undefined && this.val !== val){\r\n    this.val = val;\r\n     if(this.isChanged < 3){\r\n      this.placeholder = this.val;\r\n      // console.log(this.val);\r\n    }\r\n    this.onChange(val);\r\n    this.onTouch(val);\r\n    this.isChanged++;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n  margin-bottom: 7px;\\n}\\n\\nmat-icon {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvbmFtZS1pbnB1dC9DOlxcVXNlcnNcXHZpbG1pXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxnYWxsZXJ5QW5ndWxhclNwcmluZy9zcmNcXGFwcFxcY29tcG9uZW50c1xcaW5wdXRzXFxuYW1lLWlucHV0XFxuYW1lLWlucHV0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9uYW1lLWlucHV0L25hbWUtaW5wdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9uYW1lLWlucHV0L25hbWUtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogN3B4O1xyXG59XHJcblxyXG5tYXQtaWNvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuIiwibWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogN3B4O1xufVxuXG5tYXQtaWNvbiB7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufSJdfQ== */\"","import { Component, forwardRef, HostBinding, Input } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-name-input',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NameInputComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  templateUrl: './name-input.component.html',\r\n  styleUrls: ['./name-input.component.scss']\r\n})\r\nexport class NameInputComponent implements ControlValueAccessor{\r\n  val = ''; // this is the updated value that the class accesses\r\n  placeholder = '';\r\n  isChanged = 0; // set value(val) gets called twice while initializing so I set it's placeholder as val twice just to avoid it being renamed if user inputs something\r\n  constructor() {\r\n  }\r\n  onChange: any = () => {};\r\n  onTouch: any = () => {};\r\n\r\n  set value(val) {\r\n    // this value is updated by programmatic changes if( val !== undefined && this.val !== val){\r\n    this.val = val;\r\n     if(this.isChanged < 2){\r\n      this.placeholder = this.val;\r\n    }\r\n    this.onChange(val);\r\n    this.onTouch(val);\r\n    this.isChanged++;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n  margin-bottom: 7px;\\n}\\n\\nmat-icon {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvcGFzc3dvcmQtaW5wdXQvQzpcXFVzZXJzXFx2aWxtaVxcT25lRHJpdmVcXERvY3VtZW50c1xcZ2FsbGVyeUFuZ3VsYXJTcHJpbmcvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGlucHV0c1xccGFzc3dvcmQtaW5wdXRcXHBhc3N3b3JkLWlucHV0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9wYXNzd29yZC1pbnB1dC9wYXNzd29yZC1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtBQ0NGOztBRENBO0VBQ0UsaUJBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5wdXRzL3Bhc3N3b3JkLWlucHV0L3Bhc3N3b3JkLWlucHV0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDdweDtcclxufVxyXG5tYXQtaWNvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn0iLCJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiA3cHg7XG59XG5cbm1hdC1pY29uIHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59Il19 */\"","import { Component, forwardRef, HostBinding, Input } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-password-input',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PasswordInputComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  templateUrl: './password-input.component.html',\r\n  styleUrls: ['./password-input.component.scss']\r\n})\r\nexport class PasswordInputComponent implements ControlValueAccessor {\r\n  constructor() {}\r\n  onChange: any = () => {};\r\n  onTouch: any = () => {};\r\n  val = ''; // this is the updated value that the class accesses\r\n  placeholder = '';\r\n  isChanged = 0; // set value(val) gets called twice while initializing so I set it's placeholder as val twice just to avoid it being renamed if user inputs something\r\n\r\n  set value(val) {\r\n    // this value is updated by programmatic changes if( val !== undefined && this.val !== val){\r\n    this.val = val;\r\n    this.val = val;\r\n    if (this.isChanged < 2) {\r\n      this.placeholder = this.val;\r\n    }\r\n    this.onChange(val);\r\n    this.onTouch(val);\r\n    this.isChanged++;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n  margin-bottom: 7px;\\n}\\n\\nmat-icon {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvc2VhcmNoLWJveC1pbnB1dC9DOlxcVXNlcnNcXHZpbG1pXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxnYWxsZXJ5QW5ndWxhclNwcmluZy9zcmNcXGFwcFxcY29tcG9uZW50c1xcaW5wdXRzXFxzZWFyY2gtYm94LWlucHV0XFxzZWFyY2gtYm94LWlucHV0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9zZWFyY2gtYm94LWlucHV0L3NlYXJjaC1ib3gtaW5wdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFRTtFQUNFLGlCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy9zZWFyY2gtYm94LWlucHV0L3NlYXJjaC1ib3gtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICB9XHJcbiAgXHJcbiAgbWF0LWljb24ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbiAgfVxyXG4gICIsIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDdweDtcbn1cblxubWF0LWljb24ge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Component, forwardRef } from '@angular/core';\r\nimport { CategoriesInputComponent } from '../categories-input/categories-input.component';\r\n\r\n@Component({\r\n  selector: 'app-search-box-input',\r\n  templateUrl: './search-box-input.component.html',\r\n  styleUrls: ['./search-box-input.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SearchBoxInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class SearchBoxInputComponent implements ControlValueAccessor {\r\n\r\n  val = ''; // this is the updated value that the class accesses\r\n  constructor() {\r\n  }\r\n  onChange: any = () => {};\r\n  onTouch: any = () => {};\r\n\r\n  set value(val) {\r\n    // this value is updated by programmatic changes if( val !== undefined && this.val !== val){\r\n    this.val = val;\r\n    this.onChange(val);\r\n    this.onTouch(val);\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\n  width: 90%;\\n  margin-bottom: 7px;\\n}\\n\\nmat-icon {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvdGFncy1jaGVja2JveC1pbnB1dC9DOlxcVXNlcnNcXHZpbG1pXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxnYWxsZXJ5QW5ndWxhclNwcmluZy9zcmNcXGFwcFxcY29tcG9uZW50c1xcaW5wdXRzXFx0YWdzLWNoZWNrYm94LWlucHV0XFx0YWdzLWNoZWNrYm94LWlucHV0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy90YWdzLWNoZWNrYm94LWlucHV0L3RhZ3MtY2hlY2tib3gtaW5wdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURDQTtFQUNFLGlCQUFBO0FDRUYiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy90YWdzLWNoZWNrYm94LWlucHV0L3RhZ3MtY2hlY2tib3gtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDkwJTtcclxuICBtYXJnaW4tYm90dG9tOiA3cHg7XHJcbn1cclxubWF0LWljb24ge1xyXG4gIG1hcmdpbi1yaWdodDogNXB4O1xyXG59XHJcbiIsIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luLWJvdHRvbTogN3B4O1xufVxuXG5tYXQtaWNvbiB7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufSJdfQ== */\"","import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Component, OnInit, forwardRef, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { MatSelect, MatSelectChange } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-tags-checkbox-input',\r\n  templateUrl: './tags-checkbox-input.component.html',\r\n  styleUrls: ['./tags-checkbox-input.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => TagsCheckboxInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class TagsCheckboxInputComponent implements ControlValueAccessor {\r\n\r\n  constructor() {}\r\n  onChange: any = () => {};\r\n  onTouch: any = () => {};\r\n  isDisabled: boolean;\r\n  @ViewChild(MatSelect, {static: false}) matSelect: MatSelect;\r\n  @Output() selectionChange: EventEmitter<MatSelectChange> = new EventEmitter<MatSelectChange>();\r\n  \r\n  @Input()\r\n  val; // this is the updated value that the class accesses\r\n\r\n  @Input()\r\n  tags: any;\r\n\r\n  set value(val) {\r\n    // this value is updated by programmatic changes if( val !== undefined && this.val !== val){\r\n    this.val = val ? val : [''];\r\n    this.onChange(val);\r\n    this.onTouch(val);\r\n  }\r\n\r\n  selectionChanged(event: MatSelectChange){\r\n    this.selectionChange.emit(new MatSelectChange(this.matSelect, event.value));\r\n    // console.log(event.value);\r\n  }\r\n\r\n  get value() {\r\n    return this.val;\r\n  }\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n  margin-bottom: 7px;\\n}\\n\\nmat-icon {\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnB1dHMvdGFncy1pbnB1dC9DOlxcVXNlcnNcXHZpbG1pXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxnYWxsZXJ5QW5ndWxhclNwcmluZy9zcmNcXGFwcFxcY29tcG9uZW50c1xcaW5wdXRzXFx0YWdzLWlucHV0XFx0YWdzLWlucHV0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy90YWdzLWlucHV0L3RhZ3MtaW5wdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURDRTtFQUNFLGlCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2lucHV0cy90YWdzLWlucHV0L3RhZ3MtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICB9XHJcbiAgbWF0LWljb24ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbiAgfSIsIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDdweDtcbn1cblxubWF0LWljb24ge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","import { Component, OnInit, Input, ViewChild, ElementRef, forwardRef } from '@angular/core';\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { MatAutocomplete, MatAutocompleteSelectedEvent, MatChipInputEvent } from '@angular/material';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-tags-input',\r\n  templateUrl: './tags-input.component.html',\r\n  styleUrls: ['./tags-input.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => TagsInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class TagsInputComponent implements ControlValueAccessor {\r\n\r\n  \r\n  constructor() {\r\n    this.filteredTags = this.tagControl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((tag: string | null) => tag ? this._filterTag(tag) : this.allTags.slice()));\r\n\r\n  }\r\n\r\n  \r\n  // tagList - request for possible initial values\r\n  @Input()\r\n  val: string[];\r\n  isDisabled: boolean;\r\n  hidePassword: boolean;\r\n  selectable = true;\r\n  removable = true;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  addOnBlur = true;\r\n\r\n  // for Autocomplete of tags\r\n  @Input()\r\n  allTags: string[];\r\n\r\n  filteredTags: Observable<string[]>;\r\n  tagControl = new FormControl();\r\n\r\n  @ViewChild('tagInput', { static: false }) tagInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto', { static: false }) matAutocomplete: MatAutocomplete;\r\n\r\n  isError: boolean;\r\n\r\n  onChanged: any = () => { };\r\n  onTouched: any = () => { };\r\n\r\n  \r\n  set value(val) {\r\n    this.val = val ? val : [''];\r\n    this.onChanged(val);\r\n    this.onTouched(val);\r\n  }\r\n\r\n  get value() {\r\n    return this.val;\r\n  }\r\n\r\n\r\n  private _filterTag(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allTags.filter(tag => tag.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  private _determineChipListErrorState(): boolean {\r\n\r\n    if (!this.value) {\r\n      return false;\r\n    }\r\n    return this.value.length === 0;\r\n  }\r\n\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n\r\n    this.tagInput.nativeElement.value = '';\r\n    this.tagControl.setValue(null);\r\n    this.value.push(event.option.viewValue.trim());\r\n    this.isError = this._determineChipListErrorState();\r\n  }\r\n\r\n  removeTag(index: number): void {\r\n\r\n    if (index >= 0) {\r\n      this.value.splice(index, 1);\r\n      this.isError = this._determineChipListErrorState();\r\n    }\r\n  }\r\n\r\n  addTag(event: MatChipInputEvent): void {\r\n\r\n    // To make sure this does not conflict with OptionSelected Event\r\n    if (!this.matAutocomplete.isOpen) {\r\n\r\n      const value = event.value;\r\n\r\n      // Add tag\r\n      if ((value || '').trim()) {\r\n        this.value.push(value.trim());\r\n      }\r\n\r\n      // Reset the input value\r\n      if (event.input) {\r\n        event.input.value = '';\r\n      }\r\n      this.tagControl.setValue(null);\r\n      this.isError = this._determineChipListErrorState();\r\n    }\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.onChanged = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isError = this._determineChipListErrorState();\r\n  }\r\n}","import { TagsInputComponent } from './components/inputs/tags-input/tags-input.component';\r\nimport { CategoriesInputComponent } from './components/inputs/categories-input/categories-input.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from './material.module';\r\nimport { EmailInputComponent } from './components/inputs/email-input/email-input.component';\r\nimport { PasswordInputComponent } from './components/inputs/password-input/password-input.component';\r\nimport { NameInputWiderComponent } from './components/inputs/name-input-wider/name-input-wider.component';\r\nimport { NameInputComponent } from './components/inputs/name-input/name-input.component';\r\nimport { DescriptionInputComponent } from './components/inputs/description-input/description-input.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { TagsCheckboxInputComponent } from './components/inputs/tags-checkbox-input/tags-checkbox-input.component';\r\nimport { SearchBoxInputComponent } from './components/inputs/search-box-input/search-box-input.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmailInputComponent,\r\n    PasswordInputComponent,\r\n    NameInputWiderComponent,\r\n    NameInputComponent,\r\n    DescriptionInputComponent,\r\n    CategoriesInputComponent,\r\n    TagsInputComponent,\r\n    TagsCheckboxInputComponent,\r\n    SearchBoxInputComponent\r\n  ],\r\n  imports: [FormsModule, ReactiveFormsModule, MaterialModule],\r\n  exports: [\r\n    EmailInputComponent,\r\n    PasswordInputComponent,\r\n    NameInputWiderComponent,\r\n    NameInputComponent,\r\n    DescriptionInputComponent,\r\n    CategoriesInputComponent,\r\n    TagsInputComponent,\r\n    TagsCheckboxInputComponent,\r\n    SearchBoxInputComponent\r\n  ]\r\n})\r\nexport class ControlAccessorsModule {}\r\n"],"sourceRoot":""}